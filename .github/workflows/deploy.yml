name: Deploy Website
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build project
        run: yarn build
      - name: Run ESLint
        run: yarn lint

  deploy:
    name: Deploy to Server via SSH
    runs-on: ubuntu-latest
    environment: Production
    timeout-minutes: 30
    needs: ci
    permissions:
      packages: read
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            if [ ! -d ~/deployments ]; then
              mkdir ~/deployments
            fi
            if [ ! -d ~/deployments/portfolio ]; then
              git clone https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}.git ~/deployments/portfolio
              cd ~/deployments/portfolio
            elif [ ! -d ~/deployments/portfolio/.git ]; then
              rm -rf ~/deployments/portfolio
              git clone https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}.git ~/deployments/portfolio
              cd ~/deployments/portfolio
            else
              cd ~/deployments/portfolio
              git pull origin main
              git reset --hard origin/main
            fi
            rm -f .env
            touch .env
            
            echo NUXT_SITE_URL=${{ vars.SITE_URL }} > .env
            echo NUXT_SITE_NAME=${{ vars.SITE_NAME }} >> .env
            echo NUXT_OAUTH_GITHUB_CLIENT_ID=${{ secrets.OAUTH_GITHUB_CLIENT_ID }} >> .env
            echo NUXT_OAUTH_GITHUB_CLIENT_SECRET=${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }} >> .env
            echo NUXT_OAUTH_GITHUB_REDIRECT_URL=https://lysen.dev/api/auth/github >> .env
            echo POSTGRES_DB=portfolio >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo NUXT_SESSION_PASSWORD=${{ secrets.SESSION_PASSWORD }} >> .env
            echo NUXT_AUTHORIZED_EMAIL=${{ secrets.AUTHORIZED_EMAIL }} >> .env
            echo SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} >> .env
            
            docker compose build
            docker compose down
            docker compose up -d --remove-orphans
            
            docker system prune -f