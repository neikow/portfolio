services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      dockerfile: Dockerfile
      context: .
      target: runner
      secrets:
        - sentry_auth_token

    depends_on:
      db:
        condition: service_healthy
    container_name: portfolio-web
    env_file: .env
    environment:
      NUXT_DB_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

    restart: unless-stopped
    networks:
      - default
      - app-network

  migration:
    build:
      dockerfile: Dockerfile
      context: .
      target: migration
    env_file: .env
    environment:
      NUXT_DB_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  db_data:

secrets:
  sentry_auth_token:
    environment: SENTRY_AUTH_TOKEN

networks:
  app-network:
    driver: bridge

  default:
    external: true
    name: nginx
